---
# For Pull Requests, we build only the first three jobs: autotools on Linux,
# cmake on Linux, and cmake on Windows 32 bit.
#
# For branch builds and cron builds (once a day), we build all the jobs. This
# is achieved using the "if: type IN (push, api, cron)" fields in the matrix.

language: c
os: linux

jobs:
  include:
    - stage: "Stage 1"
      env: JOB=cmake-linux
      compiler: gcc
      addons:
        sonarcloud:
          organization: "toktok"
          token:
            secure: "Z0QPd1UPtbCqrvrnLjOhhiOORbtJ+5dNwZGsiQgWqO0v5LeD6EeVCvGPXtzRrt+LT8uneAFLy/FgsKT1sny5sJxB+LsEJxZHiVXHbKINrX9E1VEkmWI+/6ful5p5gprqg4fOaqVcZfPDtifj3mhYjFjbAgZO0OxVAbFI5K+wPrXdE9zN6Ji6oSoxczGUItdd5oTtI17eIJNSJo9tfc1hF5jjbfj30M3i+eCqiRb19IGWAiovrGDXb4L/QIel7Zf+XslLov6SwibNO+/kwdSuydivrEYLH5l7brsxOBBVLfBeuxuBCvcFjbVwQlJxvk+UF0Gp53c1g335KDpwWgmFD4ku4bMVR6S3OO/Oo/hGAF7sT+Sl4zcnMOBAPq6m9Ewuj9f5FFOtPOz+/6jygHQHro0Hv1W0MQTcfI8jKSb8mQNmHbWpk63wfUubOLzAz+Tbb4L0+idXsssLWxrdPk2Uj/6fzClmm8gVyNR1ZNY9xCYCEu6s7PxTpWlioYOSBIxAXZlcxEU2K5pwij5YG62IsBnpRwFzmZCAh/pbo4JK5IOjQYoZFpZio8BBxl4J8Q7AUbsYtZfYD+pVre9AUEb7FDCyskb5IjPVCtf8dOey3C2vBZDPgMuXcVok3B8x4t7DTHA4GcZYSN0QeHO5r6b4UqKpBtOn1Vb7GGYyi+f87ns="
        apt:
          packages:
            - libconfig-dev          # For tox-bootstrapd.
            - libcv-dev              # For av_test.
            - libhighgui-dev         # For av_test.
            - libopencv-contrib-dev  # For av_test.
            - libopus-dev            # For toxav.
            - libsndfile1-dev        # For av_test.
            - libgtest-dev           # For unit tests.
            - libvpx-dev             # For toxav.
            - portaudio19-dev        # For av_test.
            - pylint
      install:       .travis/$JOB install
      script:        .travis/$JOB script
      after_script:  .travis/upload-coverage
    - stage: "Stage 1"
      env: JOB=autotools-linux
      compiler: clang
      addons:
        apt:
          packages:
            - libconfig-dev         # For tox-bootstrapd.
            - libopus-dev           # For toxav.
            - libvpx-dev            # For toxav.
      install:       .travis/$JOB install
      script:        .travis/$JOB script
    - stage: "Stage 1"
      env: JOB=bazel-linux
      compiler: clang
      addons:
        apt:
          packages:
            - libcv-dev              # For av_test.
            - libhighgui-dev         # For av_test.
            - libopencv-contrib-dev  # For av_test.
      before_install:
        # Clear bazel installation.
        - rm -rf $HOME/.cache/bazel/_bazel_$USER/install
        # Get toktok-stack, which contains the bazel workspace.
        - cd ..
        - git clone --depth=1 --branch=upgrade-bazel https://github.com/iphydf/toktok-stack
        - rm -rf toktok-stack/c-toxcore
        - mv c-toxcore toktok-stack/
        - cd toktok-stack/c-toxcore
      install:       .travis/$JOB install
      script:        .travis/$JOB script
      before_cache:
        # Clear bazel installation.
        - rm -rf $HOME/.cache/bazel/_bazel_$USER/install
    - stage: "Stage 1"
      if: type IN (push, api, cron)
      env: JOB=cmake-win32
      services: [docker]
      install:       .travis/$JOB install
      script:        .travis/$JOB script
    - stage: "Stage 1"
      if: type IN (push, api, cron)
      env: JOB=cmake-win64
      services: [docker]
      install:       .travis/$JOB install
      script:        .travis/$JOB script
    - stage: "Stage 1"
      if: type IN (push, api, cron)
      env: JOB=cmake-freebsd
      install:       .travis/$JOB-stage1 install
      script:        .travis/$JOB-stage1 script
    - stage: "Stage 1"
      if: type IN (push, api, cron)
      env: JOB=cmake-osx
      os: osx
      install:       .travis/$JOB install
      script:        .travis/$JOB script
    - stage: "Stage 1"
      if: type IN (push, api, cron)
      env: JOB=tox-bootstrapd-docker
      services: [docker]
      script:        .travis/$JOB
    - stage: "Stage 2"
      if: type IN (push, api, cron)
      env: JOB=cmake-freebsd
      install:       .travis/$JOB-stage2 install
      script:        .travis/$JOB-stage2 script
  fast_finish: true

cache:
  directories:
    - $HOME/.cache/bazel
    - $HOME/cache
    - /opt/freebsd/cache

notifications:
  irc:
    channels:
      - "chat.freenode.net#toktok-status"
    template:
      - "%{result} %{repository_name} %{build_url}"
      - "#%{build_number} changes: %{compare_url}"
